作用域 -- 针对于变量、标识符(identifier)的生命周期
    代码块作用域 -- {} 内
    函数作用域   -- 函数体内
    文件作用域   -- 全局变量
    原型作用域   -- 函数声明时的参数名，可以随意（因为函数定义、调用时，名称均可不一样）

链接属性 -- 在多个源文件中，链接属性决定标识符如何处理
    external   --  默认属性，不论某个标识符声明多少次，它们都将共享同一个实体
    internal   --  在同一个文件内，共享一个实体；不同的源文件中，多个声明对应多个独立的实体
    none       --  每个标识符的声明，都将作为一个独立的实体来处理

存储类型 -- 变量如何在内存中保存
    普通内存    -- 静态变量，程序运行期间始终存在，无法改为其他存储类型； static
    运行时堆栈  -- 代码块中声明的变量，都将分配到堆栈中，声明时创建，代码块结束时销毁；auto
    硬件寄存器  -- 专有寄存器存储，效率最高，适合使用频率很高的变量，但也存在编译器优化，根据实际情况，忽略人为设置
    
    初始化：自动变量声明时，系统不会对其设置默认值；因此
        a.声明初始化，相比于先声明再赋值，没有效率上的区别；
        b.自动变量声明后，未初始化的话，一定是垃圾值

static 关键字
    当修饰函数或者代码块之外的变量时，修改其链接属性，从external -> internal
    当修饰代码块内部变量时，修改其存储属性，从auto -> static


